apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.global.env }}-prometheus
  labels:
    app: {{ .Values.global.app }}
    component: prometheus
    env: {{ .Values.global.env }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.global.app }}
      component: prometheus
      env: {{ .Values.global.env }}
  strategy:
    type: Recreate
    rollingUpdate: null
  template:
    metadata:
      labels:
        app: {{ .Values.global.app }}
        component: prometheus
        env: {{ .Values.global.env }}
    spec:
      volumes:
        - name: prometheus-config
          configMap:
            name: {{ .Values.global.env }}-prometheus-config
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: {{ .Values.global.env }}-prometheus-data
      containers:
        - name: prometheus
          image: quay.io/prometheus/prometheus:latest
          volumeMounts:
            - name: prometheus-config
              mountPath: /mnt/config
            - name: prometheus-data
              mountPath: /mnt/data
          args:
            - --config.file=/mnt/config/prometheus.yml
            - --storage.tsdb.path=/mnt/data
            - --web.enable-lifecycle
            - --web.external-url=http://localhost:8001/api/v1/namespaces/{{ .Release.Namespace }}/services/{{ .Values.global.env }}-prometheus:web/proxy/
            - --web.route-prefix=/
          ports:
            - name: web
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /graph
              port: web
              scheme: HTTP
          readinessProbe:
            httpGet:
              path: /graph
              port: web
              scheme: HTTP
